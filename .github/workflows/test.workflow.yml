name: DepthAI Core HIL Testing

on:
  workflow_dispatch:
  push:
    branches:
      - v3_develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - v3_develop

# Only allow latest run on same branch to be tested
concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:

  # Testing
  test:
    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"
    strategy:
      matrix:
        # os: ['windows', 'macos', 'linux']
        os: ['linux']
        arch: ['x64']
        flavor: ['vanilla', 'asan-ubsan', 'tsan']
        exclude:
          - os: 'windows'
            arch: 'x64'
            flavor: 'tsan'
      fail-fast: false
    runs-on: ['self-hosted', 'hil-test-v3', '${{ matrix.os }}', '${{ matrix.arch }}']

    steps:
    - name: Cache .hunter folder
      uses: actions/cache@v3
      with:
        path: $HOME/.hun2_${{ matrix.flavor }}
        key: hunter-${{ matrix.os }}-${{ matrix.cmake }}
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install numpy

    - name: Specify toolchain path
      if: matrix.flavor == 'vanilla'
      run: echo "CMAKE_TOOLCHAIN_PATH=" >> $GITHUB_ENV
    - name: Specify toolchain path
      if: matrix.flavor != 'vanilla'
      run: echo "CMAKE_TOOLCHAIN_PATH=$PWD/cmake/toolchain/${{ matrix.flavor }}.cmake" >> $GITHUB_ENV

    - name: Configure, Build and Test
      if: matrix.os != 'linux'
      run: |
        source venv/bin/activate  # Activate virtual environment
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -D HUNTER_ROOT=$HOME/.hun2_${{ matrix.flavor }} -D DEPTHAI_BUILD_EXAMPLES=ON -D DEPTHAI_BUILD_TESTS=ON -D DEPTHAI_TEST_EXAMPLES=ON -D DEPTHAI_BUILD_PYTHON=ON -D DEPTHAI_PYTHON_TEST_EXAMPLES=ON -D DEPTHAI_PYTHON_ENABLE_EXAMPLES=ON
        cmake --build build --parallel 4 --config Release
        cd tests
        python3 run_tests.py

    - name: Configure, Build and Test
      if: matrix.os == 'linux'
      run: |
        export DISPLAY=:99
        xdpyinfo -display $DISPLAY >/dev/null 2>&1 || (Xvfb $DISPLAY &)
        source venv/bin/activate  # Activate virtual environment
        python3 -m pip install jinja2
        cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -D HUNTER_ROOT=$HOME/.hun2_${{ matrix.flavor }} -D DEPTHAI_BUILD_EXAMPLES=ON -D DEPTHAI_BUILD_TESTS=ON -D DEPTHAI_TEST_EXAMPLES=ON -D DEPTHAI_BUILD_PYTHON=ON -D DEPTHAI_PYTHON_TEST_EXAMPLES=ON -D DEPTHAI_PYTHON_ENABLE_EXAMPLES=ON
        cmake --build build --parallel 4 --config Release
        cd tests
        python3 run_tests.py
