name: DepthAI Core HIL Testing

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened, labeled]

# Only allow latest run on same branch to be tested
concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:

  # The precheck job determines whether a workflow should be run in full
  precheck:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
    - name: Evaluate trigger condition
      id: check
      run: |
        EVENT_NAME="${{ github.event_name }}"

        RAW_LABELS='${{ toJson(github.event.pull_request.labels) }}'
        if [[ "$RAW_LABELS" == "null" || -z "$RAW_LABELS" ]]; then
          LABELS="[]"
        else
          LABELS="$RAW_LABELS"
        fi

        SHOULD_RUN="true"
        if [[ "$EVENT_NAME" == "pull_request" ]]; then
          if ! echo "$LABELS" | jq -r '.[].name' | grep -q "testable"; then
            SHOULD_RUN="false"
          fi
        fi

        echo "should_run=$SHOULD_RUN" >> "$GITHUB_OUTPUT"

  run_vanilla_tests:
    needs: [precheck]
    if: needs.precheck.outputs.should_run == 'true'
    uses: ./.github/workflows/test_child.yml
    with:
      flavor: "vanilla"
      luxonis_os_versions_to_test: "['1.14.1', '1.15.0', '1.18.3', 'usb-testing-build']"
      luxonis_os_versions_to_test_rgb: "['1.18.3', 'usb-testing-build']"
    secrets:
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      HIL_PAT_TOKEN: ${{ secrets.HIL_PAT_TOKEN }}

  run_tsan_tests:
    needs: [precheck]
    if: needs.precheck.outputs.should_run == 'true'
    uses: ./.github/workflows/test_child.yml
    with:
      flavor: "tsan"
      luxonis_os_versions_to_test: "['1.18.3']"
    secrets:
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      HIL_PAT_TOKEN: ${{ secrets.HIL_PAT_TOKEN }}

  run_asan-ubsan_tests:
    needs: [precheck]
    if: needs.precheck.outputs.should_run == 'true'
    uses: ./.github/workflows/test_child.yml
    with:
      flavor: "asan-ubsan"
      luxonis_os_versions_to_test: "['1.18.3']"
    secrets:
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      HIL_PAT_TOKEN: ${{ secrets.HIL_PAT_TOKEN }}

  windows_rvc2_rvc4_test:
    needs: [precheck]
    if: needs.precheck.outputs.should_run == 'true'
    runs-on: ['self-hosted', 'windows', 'hil-test']
    env:
      LOCALAPPDATA: "C:/actions-runner/vcpkg_cache"
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Configure, Build and Test
      run: |
        $isPR = "${{ github.head_ref }}" -ne ""
        $extraFlags = ""

        if (-not $isPR) {
          $extraFlags = @(
            '-DDEPTHAI_BUILD_EXAMPLES=ON',
            '-DDEPTHAI_BUILD_PYTHON=ON',
            '-DDEPTHAI_PYTHON_ENABLE_TESTS=ON',
            '-DDEPTHAI_TEST_EXAMPLES=ON',
            '-DDEPTHAI_PYTHON_TEST_EXAMPLES=ON',
            '-DDEPTHAI_PYTHON_ENABLE_EXAMPLES=ON'
          ) -join ' '
        }

        $cmakeConfigureCommand = "cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -DDEPTHAI_VCPKG_INTERNAL_ONLY=OFF -DVCPKG_OVERLAY_TRIPLETS=./cmake/triplets/release -DDEPTHAI_BUILD_TESTS=ON $extraFlags"
        Write-Host "Running: $cmakeConfigureCommand"
        Invoke-Expression $cmakeConfigureCommand

        $cmakeBuildCommand = "cmake --build build --parallel 4 --config Release"
        Write-Host "Running: $cmakeBuildCommand"
        Invoke-Expression $cmakeBuildCommand
        cd tests
        python run_tests.py
