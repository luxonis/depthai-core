name: Run hil tests for specific santizier
on:
  workflow_call:
    inputs:
      flavor:
        required: true
        type: string
      luxonis_os_versions_to_test:
        required: true
        type: string
      luxonis_os_versions_to_test_rgb:
        required: false
        type: string
        default: "[]"
    secrets:
      CONTAINER_REGISTRY:
        required: true
      HIL_PAT_TOKEN:
        required: true

jobs:
 build_docker_container:
    runs-on: ['self-hosted', 'hil-test-v3']
    outputs:
        tag: ${{ steps.build_and_push.outputs.tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Build and push
      id: build_and_push
      env:
        CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      run: |
        BRANCH_NAME="${{ github.ref_name }}"
        if [[ -n "${{ github.head_ref }}" ]]; then
         BRANCH_NAME="${{ github.ref }}"
         PULL_REQUEST="true"
        fi
        if [ "$PULL_REQUEST" = "true" ]; then
          TAG="${{ inputs.flavor }}_short_${{ github.sha }}"
        else
          TAG="${{ inputs.flavor }}_${{ github.sha }}"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Using branch: $BRANCH_NAME"
        scripts/hil/build_and_push.sh "${{ inputs.flavor }}" "$BRANCH_NAME" "$CONTAINER_REGISTRY" "${{ github.sha }}" "$PARALLEL_JOBS" "$PULL_REQUEST" "$TAG"

 linux_rvc2_test:
    needs: [build_docker_container]
    runs-on: ['self-hosted', 'testbed-runner']
    steps:
    - uses: actions/checkout@v3

    - name: Run RVC2 tests
      run: |
        /usr/bin/python3 -m venv venv
        . venv/bin/activate
        pip install hil-framework --upgrade --index-url "https://__token__:${{ secrets.HIL_PAT_TOKEN }}@gitlab.luxonis.com/api/v4/projects/213/packages/pypi/simple" > /dev/null 2>&1
        export RESERVATION_NAME="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID#rvc2-${{ inputs.flavor }}"
        exec hil_runner --capabilities depthai-core-hil --platforms 'rvc2 and rvc2' --reservation-name $RESERVATION_NAME --wait --docker-image ${{ secrets.CONTAINER_REGISTRY }}/depthai-core-hil:${{ needs.build_docker_container.outputs.tag }} --commands "./tests/run_tests_entrypoint.sh rvc2"

  # Testing
 linux_rvc4_test:
      needs: [build_docker_container]
      strategy:
        matrix:
          rvc4os: ${{ fromJson(inputs.luxonis_os_versions_to_test) }}
        fail-fast: false
      runs-on: ['self-hosted', 'testbed-runner']
      steps:
      - uses: actions/checkout@v3

      - name: Run RVC4 tests
        run: |
          /usr/bin/python3 -m venv venv
          . venv/bin/activate
          pip install hil-framework --upgrade --index-url "https://__token__:${{ secrets.HIL_PAT_TOKEN }}@gitlab.luxonis.com/api/v4/projects/213/packages/pypi/simple" > /dev/null 2>&1
          export RESERVATION_NAME="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID#rvc4-${{ matrix.rvc4os }}-${{ inputs.flavor }}"
          exec hil_runner --models "oak4_pro or oak4_d" --reservation-name $RESERVATION_NAME --wait --rvc4-os-version ${{ matrix.rvc4os }} --docker-image ${{ secrets.CONTAINER_REGISTRY }}/depthai-core-hil:${{ needs.build_docker_container.outputs.tag }} --commands "./tests/run_tests_entrypoint.sh rvc4"

 linux_rvc4_rgb_test:
      needs: [build_docker_container]
      strategy:
        matrix:
          rvc4os: ${{ fromJson(inputs.luxonis_os_versions_to_test_rgb) }}
        fail-fast: false
      runs-on: ['self-hosted', 'testbed-runner']
      steps:
      - uses: actions/checkout@v3

      - name: Run RVC4 tests
        run: |
          /usr/bin/python3 -m venv venv
          . venv/bin/activate
          pip install hil-framework --upgrade --index-url "https://__token__:${{ secrets.HIL_PAT_TOKEN }}@gitlab.luxonis.com/api/v4/projects/213/packages/pypi/simple" > /dev/null 2>&1
          export RESERVATION_NAME="https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID#rvc4-${{ matrix.rvc4os }}-${{ inputs.flavor }}-rgb"
          exec hil_runner --models "oak4_s" --reservation-name $RESERVATION_NAME --wait --rvc4-os-version ${{ matrix.rvc4os }} --docker-image ${{ secrets.CONTAINER_REGISTRY }}/depthai-core-hil:${{ needs.build_docker_container.outputs.tag }} --commands "./tests/run_tests_entrypoint.sh rvc4rgb"

