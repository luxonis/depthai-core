syntax = "proto3";

package dai.proto.event;

import "common.proto";

message BatchUploadEvents {
  repeated Event events = 1;
}

message Event {
  // prevents dual uploads, can be a local ID for example
  optional string nonce = 1;

  // timestamp (seconds since 1970) when event originated (useful especially with offline/later upload)
  int64 created_at = 2;

  // name to identify event
  string name = 3;

  // arbitrary tags, include tag "snap" for event to be processed snap
  repeated string tags = 4;

  // arbitrary key/value data
  map<string, string> extras = 5;

  // how many files to wait to upload, before event is considered complete,
  // notified about, snap created, ...
  int32 expect_files_num = 6;

  // serial number of source device
  optional string source_serial_number = 7;

  // ID of sending Hub application
  // (to be provided by agent as ENV - `AGENT_APP_ID` - eg `01916edb-3ded-793a-b6ad-cd4395768425`)
  optional string source_app_id = 8;

  // Identifier of sending Hub application
  // (to be provided by agent as ENV - `AGENT_APP_IDENTIFIER` - eg `com.luxonis.counter-app`)
  optional string source_app_identifier = 9;
}
message BatchUploadEventsResult {
  repeated EventResult events = 1;
}

message EventResult {
    string nonce = 1;
    oneof result {
        AcceptedEvent accepted = 2;
        IngestError error = 3;
    }
}

message AcceptedEvent {
    repeated string file_upload_urls = 1;
}

message IngestError {
    string message = 1;
}
